item-app  | 
item-app  | > docker-software-delivery@1.0.0 start /app
item-app  | > node ./bin/www
item-app  | 
item-app  | NODE_ENV: production
item-app  | /app/node_modules/mongodb/lib/mongo_client.js:421
item-app  |           throw err
item-app  |           ^
item-app  | 
item-app  | AssertionError [ERR_ASSERTION]: null == Error [MongoError]: failed to connect to server [item-db:27017] on first connect [Error: connect ECONNREFUSED 172.19.0.2:27017
item-app  |     at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1159:16) {
item-app  |   name: 'MongoError'
item-app  | }]
item-app  |     at Pool.<anonymous> (/app/node_modules/mongodb-core/lib/topologies/server.js:336:35)
item-app  |     at Pool.emit (events.js:400:28)
item-app  |     at Connection.<anonymous> (/app/node_modules/mongodb-core/lib/connection/pool.js:280:12)
item-app  |     at Object.onceWrapper (events.js:520:26)
item-app  |     at Connection.emit (e...
item-app  |     at /app/app.js:24:10
item-app  |     at connectCallback (/app/node_modules/mongodb/lib/mongo_client.js:527:5)
item-app  |     at /app/node_modules/mongodb/lib/mongo_client.js:418:11
item-app  |     at processTicksAndRejections (internal/process/task_queues.js:77:11) {
item-app  |   generatedMessage: true,
item-app  |   code: 'ERR_ASSERTION',
item-app  |   actual: null,
item-app  |   expected: Error [MongoError]: failed to connect to server [item-db:27017] on first connect [Error: connect ECONNREFUSED 172.19.0.2:27017
item-app  |       at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1159:16) {
item-app  |     name: 'MongoError'
item-app  |   }]
item-app  |       at Pool.<anonymous> (/app/node_modules/mongodb-core/lib/topologies/server.js:336:35)
item-app  |       at Pool.emit (events.js:400:28)
item-app  |       at Connection.<anonymous> (/app/node_modules/mongodb-core/lib/connection/pool.js:280:12)
item-app  |       at Object.onceWrapper (events.js:520:26)
item-app  |       at Connection.emit (events.js:400:28)
item-app  |       at Socket.<anonymous> (/app/node_modules/mongodb-core/lib/connection/connection.js:189:49)
item-app  |       at Object.onceWrapper (events.js:520:26)
item-app  |       at Socket.emit (events.js:400:28)
item-app  |       at emitErrorNT (internal/streams/destroy.js:106:8)
item-app  |       at emitErrorCloseNT (internal/streams/destroy.js:74:3),
item-app  |   operator: '=='
item-app  | }
item-app  | npm ERR! code ELIFECYCLE
item-app  | npm ERR! errno 1
item-app  | npm ERR! docker-software-delivery@1.0.0 start: `node ./bin/www`
item-app  | npm ERR! Exit status 1
item-app  | npm ERR! 
item-app  | npm ERR! Failed at the docker-software-delivery@1.0.0 start script.
item-app  | npm ERR! This is probably not a problem with npm. There is likely additional logging output above.
item-app  | 
item-app  | npm ERR! A complete log of this run can be found in:
item-app  | npm ERR!     /root/.npm/_logs/2023-05-23T14_18_56_222Z-debug.log
item-app  | 
item-app  | > docker-software-delivery@1.0.0 start /app
item-app  | > node ./bin/www
item-app  | 
item-app  | NODE_ENV: production
item-app  | Connected to database
item-db   | about to fork child process, waiting until server is ready for connections.
item-db   | forked process: 27
item-db   | 2023-05-23T14:18:53.833+0000 I CONTROL  [main] ***** SERVER RESTARTED *****
item-db   | 2023-05-23T14:18:53.905+0000 I CONTROL  [initandlisten] MongoDB starting : pid=27 port=27017 dbpath=/data/db 64-bit host=69e6568aac60
item-db   | 2023-05-23T14:18:53.905+0000 I CONTROL  [initandlisten] db version v3.6.23
item-db   | 2023-05-23T14:18:53.905+0000 I CONTROL  [initandlisten] git version: d352e6a4764659e0d0350ce77279de3c1f243e5c
item-db   | 2023-05-23T14:18:53.905+0000 I CONTROL  [initandlisten] OpenSSL version: OpenSSL 1.0.2g  1 Mar 2016
item-db   | 2023-05-23T14:18:53.905+0000 I CONTROL  [initandlisten] allocator: tcmalloc
item-db   | 2023-05-23T14:18:53.905+0000 I CONTROL  [initandlisten] modules: none
item-db   | 2023-05-23T14:18:53.905+0000 I CONTROL  [initandlisten] build environment:
item-db   | 2023-05-23T14:18:53.905+0000 I CONTROL  [initandlisten]     distmod: ubuntu1604
item-db   | 2023-05-23T14:18:53.905+0000 I CONTROL  [initandlisten]     distarch: x86_64
item-db   | 2023-05-23T14:18:53.905+0000 I CONTROL  [initandlisten]     target_arch: x86_64
item-db   | 2023-05-23T14:18:53.905+0000 I CONTROL  [initandlisten] options: { net: { bindIp: "127.0.0.1", port: 27017, ssl: { mode: "disabled" } }, processManagement: { fork: true, pidFilePath: "/tmp/docker-entrypoint-temp-mongod.pid" }, systemLog: { destination: "file", logAppend: true, path: "/proc/1/fd/1" } }
item-db   | 2023-05-23T14:18:53.905+0000 I STORAGE  [initandlisten] 
item-db   | 2023-05-23T14:18:53.905+0000 I STORAGE  [initandlisten] ** WARNING: Using the XFS filesystem is strongly recommended with the WiredTiger storage engine
item-db   | 2023-05-23T14:18:53.905+0000 I STORAGE  [initandlisten] **          See http://dochub.mongodb.org/core/prodnotes-filesystem
item-db   | 2023-05-23T14:18:53.905+0000 I STORAGE  [initandlisten] wiredtiger_open config: create,cache_size=476M,cache_overflow=(file_max=0M),session_max=20000,eviction=(threads_min=4,threads_max=4),config_base=false,statistics=(fast),compatibility=(release="3.0",require_max="3.0"),log=(enabled=true,archive=true,path=journal,compressor=snappy),file_manager=(close_idle_time=100000),statistics_log=(wait=0),verbose=(recovery_progress),
item-db   | 2023-05-23T14:18:54.353+0000 I STORAGE  [initandlisten] WiredTiger message [1684851534:353824][27:0x7f25d3edfa40], txn-recover: Set global recovery timestamp: 0
item-db   | 2023-05-23T14:18:54.587+0000 I CONTROL  [initandlisten] 
item-db   | 2023-05-23T14:18:54.587+0000 I CONTROL  [initandlisten] ** WARNING: Access control is not enabled for the database.
item-db   | 2023-05-23T14:18:54.587+0000 I CONTROL  [initandlisten] **          Read and write access to data and configuration is unrestricted.
item-db   | 2023-05-23T14:18:54.587+0000 I CONTROL  [initandlisten] 
item-db   | 2023-05-23T14:18:54.588+0000 I STORAGE  [initandlisten] createCollection: admin.system.version with provided UUID: e95d702b-d91c-49da-91c2-0d6e77515f63
item-db   | 2023-05-23T14:18:54.685+0000 I COMMAND  [initandlisten] setting featureCompatibilityVersion to 3.6
item-db   | 2023-05-23T14:18:54.685+0000 I STORAGE  [initandlisten] createCollection: local.startup_log with generated UUID: a6671419-718c-4244-b87e-cbb7cb76e80c
item-db   | 2023-05-23T14:18:54.799+0000 I FTDC     [initandlisten] Initializing full-time diagnostic data capture with directory '/data/db/diagnostic.data'
item-db   | 2023-05-23T14:18:54.799+0000 I NETWORK  [initandlisten] listening via socket bound to 127.0.0.1
item-db   | 2023-05-23T14:18:54.799+0000 I NETWORK  [initandlisten] listening via socket bound to /tmp/mongodb-27017.sock
item-db   | 2023-05-23T14:18:54.799+0000 I NETWORK  [initandlisten] waiting for connections on port 27017
item-db   | child process started successfully, parent exiting
item-db   | 2023-05-23T14:18:54.802+0000 I STORAGE  [LogicalSessionCacheRefresh] createCollection: config.system.sessions with generated UUID: 9f69044b-ddb0-4113-87b7-0d5152ef1f31
item-db   | 2023-05-23T14:18:54.953+0000 I INDEX    [LogicalSessionCacheRefresh] build index on: config.system.sessions properties: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }
item-db   | 2023-05-23T14:18:54.954+0000 I INDEX    [LogicalSessionCacheRefresh] 	 building index using bulk method; build may temporarily use up to 500 megabytes of RAM
item-db   | 2023-05-23T14:18:54.956+0000 I INDEX    [LogicalSessionCacheRefresh] build index done.  scanned 0 total records. 0 secs
item-db   | 2023-05-23T14:18:54.956+0000 I COMMAND  [LogicalSessionCacheRefresh] command config.$cmd command: createIndexes { createIndexes: "system.sessions", indexes: [ { key: { lastUse: 1 }, name: "lsidTTLIndex", expireAfterSeconds: 1800 } ], $db: "config" } numYields:0 reslen:98 locks:{ Global: { acquireCount: { r: 2, w: 2 } }, Database: { acquireCount: { w: 2, W: 1 } }, Collection: { acquireCount: { w: 2 } } } protocol:op_msg 154ms
item-db   | 2023-05-23T14:18:55.121+0000 I NETWORK  [listener] connection accepted from 127.0.0.1:40382 #1 (1 connection now open)
item-db   | 2023-05-23T14:18:55.129+0000 I NETWORK  [conn1] received client metadata from 127.0.0.1:40382 conn1: { application: { name: "MongoDB Shell" }, driver: { name: "MongoDB Internal Client", version: "3.6.23" }, os: { type: "Linux", name: "Ubuntu", architecture: "x86_64", version: "16.04" } }
item-db   | 2023-05-23T14:18:55.132+0000 I NETWORK  [conn1] end connection 127.0.0.1:40382 (0 connections now open)
item-db   | 2023-05-23T14:18:55.206+0000 I NETWORK  [listener] connection accepted from 127.0.0.1:40388 #2 (1 connection now open)
item-db   | 2023-05-23T14:18:55.207+0000 I NETWORK  [conn2] received client metadata from 127.0.0.1:40388 conn2: { application: { name: "MongoDB Shell" }, driver: { name: "MongoDB Internal Client", version: "3.6.23" }, os: { type: "Linux", name: "Ubuntu", architecture: "x86_64", version: "16.04" } }
item-db   | 2023-05-23T14:18:55.227+0000 I STORAGE  [conn2] createCollection: admin.system.users with generated UUID: c0ebe339-ff4e-4287-bb7e-7ddd583242ca
item-db   | 2023-05-23T14:18:55.359+0000 I COMMAND  [conn2] command admin.system.users appName: "MongoDB Shell" command: insert { insert: "system.users", bypassDocumentValidation: false, ordered: true, $db: "admin" } ninserted:1 keysInserted:2 numYields:0 reslen:29 locks:{ Global: { acquireCount: { r: 3, w: 3 } }, Database: { acquireCount: { W: 3 } }, Collection: { acquireCount: { w: 2 } } } protocol:op_msg 132ms
item-db   | 2023-05-23T14:18:55.360+0000 I COMMAND  [conn2] command admin.$cmd appName: "MongoDB Shell" command: createUser { createUser: "root", pwd: "xxx", roles: [ { role: "root", db: "admin" } ], digestPassword: false, writeConcern: { w: "majority", wtimeout: 600000.0 }, lsid: { id: UUID("091eba2e-8d71-405c-ad59-d5b523f3d65c") }, $db: "admin" } numYields:0 reslen:22 locks:{ Global: { acquireCount: { r: 4, w: 4 } }, Database: { acquireCount: { W: 4 } }, Collection: { acquireCount: { w: 3 } } } protocol:op_msg 146ms
item-db   | Successfully added user: {
item-db   | 	"user" : "root",
item-db   | 	"roles" : [
item-db   | 		{
item-db   | 			"role" : "root",
item-db   | 			"db" : "admin"
item-db   | 		}
item-db   | 	]
item-db   | }
item-db   | 2023-05-23T14:18:55.361+0000 E -        [main] Error saving history file: FileOpenFailed: Unable to open() file /home/mongodb/.dbshell: No such file or directory
item-db   | 
item-db   | /usr/local/bin/docker-entrypoint.sh: ignoring /docker-entrypoint-initdb.d/*
item-db   | 
item-db   | 2023-05-23T14:18:55.365+0000 I NETWORK  [conn2] end connection 127.0.0.1:40388 (0 connections now open)
item-db   | 2023-05-23T14:18:55.375+0000 I CONTROL  [main] ***** SERVER RESTARTED *****
item-db   | killing process with pid: 27
item-db   | 2023-05-23T14:18:55.382+0000 I CONTROL  [signalProcessingThread] got signal 15 (Terminated), will terminate after current cmd ends
item-db   | 2023-05-23T14:18:55.382+0000 I NETWORK  [signalProcessingThread] shutdown: going to close listening sockets...
item-db   | 2023-05-23T14:18:55.384+0000 I NETWORK  [signalProcessingThread] removing socket file: /tmp/mongodb-27017.sock
item-db   | 2023-05-23T14:18:55.385+0000 I FTDC     [signalProcessingThread] Shutting down full-time diagnostic data capture
item-db   | 2023-05-23T14:18:55.386+0000 I STORAGE  [signalProcessingThread] WiredTigerKVEngine shutting down
item-db   | 2023-05-23T14:18:55.743+0000 I STORAGE  [signalProcessingThread] shutdown: removing fs lock...
item-db   | 2023-05-23T14:18:55.743+0000 I CONTROL  [signalProcessingThread] now exiting
item-db   | 2023-05-23T14:18:55.743+0000 I CONTROL  [signalProcessingThread] shutting down with code:0
item-db   | 
item-db   | MongoDB init process complete; ready for start up.
item-db   | 
item-db   | 2023-05-23T14:18:56.405+0000 I CONTROL  [initandlisten] MongoDB starting : pid=1 port=27017 dbpath=/data/db 64-bit host=69e6568aac60
item-db   | 2023-05-23T14:18:56.405+0000 I CONTROL  [initandlisten] db version v3.6.23
item-db   | 2023-05-23T14:18:56.405+0000 I CONTROL  [initandlisten] git version: d352e6a4764659e0d0350ce77279de3c1f243e5c
item-db   | 2023-05-23T14:18:56.405+0000 I CONTROL  [initandlisten] OpenSSL version: OpenSSL 1.0.2g  1 Mar 2016
item-db   | 2023-05-23T14:18:56.405+0000 I CONTROL  [initandlisten] allocator: tcmalloc
item-db   | 2023-05-23T14:18:56.405+0000 I CONTROL  [initandlisten] modules: none
item-db   | 2023-05-23T14:18:56.405+0000 I CONTROL  [initandlisten] build environment:
item-db   | 2023-05-23T14:18:56.405+0000 I CONTROL  [initandlisten]     distmod: ubuntu1604
item-db   | 2023-05-23T14:18:56.405+0000 I CONTROL  [initandlisten]     distarch: x86_64
item-db   | 2023-05-23T14:18:56.405+0000 I CONTROL  [initandlisten]     target_arch: x86_64
item-db   | 2023-05-23T14:18:56.405+0000 I CONTROL  [initandlisten] options: { net: { bindIpAll: true }, security: { authorization: "enabled" } }
item-db   | 2023-05-23T14:18:56.405+0000 I -        [initandlisten] Detected data files in /data/db created by the 'wiredTiger' storage engine, so setting the active storage engine to 'wiredTiger'.
item-db   | 2023-05-23T14:18:56.406+0000 I STORAGE  [initandlisten] 
item-db   | 2023-05-23T14:18:56.406+0000 I STORAGE  [initandlisten] ** WARNING: Using the XFS filesystem is strongly recommended with the WiredTiger storage engine
item-db   | 2023-05-23T14:18:56.406+0000 I STORAGE  [initandlisten] **          See http://dochub.mongodb.org/core/prodnotes-filesystem
item-db   | 2023-05-23T14:18:56.406+0000 I STORAGE  [initandlisten] wiredtiger_open config: create,cache_size=476M,cache_overflow=(file_max=0M),session_max=20000,eviction=(threads_min=4,threads_max=4),config_base=false,statistics=(fast),compatibility=(release="3.0",require_max="3.0"),log=(enabled=true,archive=true,path=journal,compressor=snappy),file_manager=(close_idle_time=100000),statistics_log=(wait=0),verbose=(recovery_progress),
item-db   | 2023-05-23T14:18:56.909+0000 I STORAGE  [initandlisten] WiredTiger message [1684851536:908992][1:0x7fee3de4ea40], txn-recover: Main recovery loop: starting at 1/27008
item-db   | 2023-05-23T14:18:57.054+0000 I STORAGE  [initandlisten] WiredTiger message [1684851537:54100][1:0x7fee3de4ea40], txn-recover: Recovering log 1 through 2
item-db   | 2023-05-23T14:18:57.134+0000 I STORAGE  [initandlisten] WiredTiger message [1684851537:134386][1:0x7fee3de4ea40], txn-recover: Recovering log 2 through 2
item-db   | 2023-05-23T14:18:57.169+0000 I STORAGE  [initandlisten] WiredTiger message [1684851537:169155][1:0x7fee3de4ea40], txn-recover: Set global recovery timestamp: 0
item-db   | 2023-05-23T14:18:57.399+0000 I FTDC     [initandlisten] Initializing full-time diagnostic data capture with directory '/data/db/diagnostic.data'
item-db   | 2023-05-23T14:18:57.400+0000 I NETWORK  [initandlisten] listening via socket bound to 0.0.0.0
item-db   | 2023-05-23T14:18:57.400+0000 I NETWORK  [initandlisten] listening via socket bound to /tmp/mongodb-27017.sock
item-db   | 2023-05-23T14:18:57.400+0000 I NETWORK  [initandlisten] waiting for connections on port 27017
item-db   | 2023-05-23T14:18:57.980+0000 I NETWORK  [listener] connection accepted from 172.19.0.3:42320 #1 (1 connection now open)
item-db   | 2023-05-23T14:18:57.985+0000 I NETWORK  [conn1] received client metadata from 172.19.0.3:42320 conn1: { driver: { name: "nodejs", version: "2.2.36" }, os: { type: "Linux", name: "linux", architecture: "x64", version: "5.15.0-72-generic" }, platform: "Node.js v14.21.3, LE, mongodb-core: 2.1.20" }
